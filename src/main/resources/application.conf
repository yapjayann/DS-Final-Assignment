akka {
  actor {
    provider = "cluster" # Use cluster for distributed systems
    allow-java-serialization = on
  }
  remote {
    artery {
      enabled = on # Ensure Artery is enabled
      transport = tcp # Use TCP for transport
      canonical.hostname = "192.168.0.4" # Use localhost for local development
      canonical.port = 0 # Allow Akka to choose an available port dynamically
      bind.hostname = "192.168.0.4" # Bind to localhost
      bind.port = 0 # Bind to a dynamically chosen port to avoid conflicts
    }
  }
  cluster {
    seed-nodes = [
      "akka://SpotifySystem@192.168.0.4:20000" # Match the actor system name, IP, and port
    ]
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
    split-brain-resolver {
      active-strategy = keep-majority # Default split-brain resolution strategy
    }
  }
  loggers = ["akka.event.slf4j.Slf4jLogger"] # Use SLF4J for logging
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = "INFO" # Adjust log level as needed
}
